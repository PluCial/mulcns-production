<project name="mulcms-release" default="compile" basedir=".">
    <property name="build.dir" value="war/WEB-INF/classes"/>
    <property name="release.ploject.dir" value="/Users/takahara/Documents/eclipse-plucial2/mulcms-release-v1"/>
	<property name="sdk.dir" location="/Applications/eclipse4.3/plugins/com.google.appengine.eclipse.sdkbundle_1.9.30/appengine-java-sdk-1.9.30" />
	<import file="${sdk.dir}/config/user/ant-macros.xml" />

	<path id="project.classpath">
		<pathelement path="war/WEB-INF/classes" />
		<fileset dir="war/WEB-INF/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${sdk.dir}/lib">
			<include name="shared/**/*.jar" />
		</fileset>
	</path>

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<target name="copyjars" depends="clean" description="Copies the App Engine JARs to the WAR.">
		<copy todir="war/WEB-INF/lib" flatten="true">
			<fileset dir="${sdk.dir}/lib/user">
				<include name="**/*.jar" />
			</fileset>
		</copy>
	</target>

	<target name="compile" depends="copyjars"
		description="Compiles Java source and copies other source files to the WAR.">
		<mkdir dir="${build.dir}" />
		<copy todir="${build.dir}">
			<fileset dir="src">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<javac srcdir="src" destdir="${build.dir}" classpathref="project.classpath"
			debug="on" />
	</target>
	
	<target name="release" depends="compile" description="Copies the App Engine JARs to the WAR.">
	    <!-- <copy preservelastmodified="true" file="war/queue.xml" tofile="${release.ploject.dir}/war/queue.xml" />
		<copy preservelastmodified="true" file="war/queue.xml" tofile="${release.ploject.dir}/war/queue.xml" /> -->
		
		<!-- lib -->
		<copy todir="${release.ploject.dir}/war/WEB-INF/lib" flatten="true">
			<fileset dir="war/WEB-INF/lib">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		
		<!-- jsp -->
		<copy todir="${release.ploject.dir}/war">
			<fileset dir="war">
				<include name="**/*.jsp" />
			</fileset>
		</copy>
		
		<!-- class & properties -->
		<copy todir="${release.ploject.dir}/${build.dir}">
			<fileset dir="${build.dir}">
			    <include name="**/*.class" />
			    <include name="**/*.properties" />
			</fileset>
		</copy>
		
		<!-- assets -->
		<copy todir="${release.ploject.dir}/war/mulcms/assets">
			<fileset dir="war/mulcms/assets">
			</fileset>
		</copy>
	</target>
</project>